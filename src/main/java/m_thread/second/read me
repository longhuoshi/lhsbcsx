E:\learn\java\【No996】2020年最新 Java多线程编程核心基础

09.多线程编程基础-停止线程-使用interrupt方法中断线程
interrupt不会真正停止线程，而是在当前线程上打上一个停止标记。
Thread提供interrupted方法检测当前线程是否中断，isInterrupted方法测试线程是否已经中断。
注意：interrupt只对 执行任务的线程里有 Thread.sleep(20000); 才会终止线程并抛异常InterruptedException。
注意：java会忽略 循环体对里面 只有 new String() 空字符串的代码。

10.多线程编程基础-暂停线程
暂停线程使用suspend,重启暂停线程使用resume方法
为何要废弃?
1、suspend如果独占公共的同步对象，使其它线程无法访问公共同步对象。

11.多线程编程基础-yield方法
yield方法的作用是放弃（放弃的时间不确定）当前的cpu资源 ，将资源让给其它 任务去占用cpu执行。


线程的优先级
12.多线程编程基础-线程的优先级
设置线程的优先级setPriority方法，优先级分为1-10个级别。如果 设置优先级小于1大于10,JDK抛出illegalArgumentException。
JDK默认3个优先级常。MIN_PRIORITY=1（最小值）,NORM_PRIORITY=5（中间值，默认）,MAX_PRIORITY =10（最大值）
线程的优先级具有继承性，比如线程A启动线程B，线程B的优先级与线程A是一样的。

13.多线程编程基础-守护线程
setDaemon设置为守护线程。 垃圾回收器就是守护线程。
注意：要在start之前设置，否则 会报IllegalThreadStateException


线程安全：
14.线程的同步机制-synchronized同步方法-局部变量为线程安全
1、局部变量，永远是线程安全的。这是由局部变量是私有的特征所造成的。
2、成员变量不是线程安全的。需要在操作成员变量的方法前加synchronized锁来保证线程的安全。

16.线程的同步机制-synchronized同步方法-多个对象使用多个对象锁
synchronized取得的锁都是对象锁。多个线程访问多个对象，JVM会创建出多个对象锁。

17.线程的同步机制-synchronized同步方法-synchronized方法锁定的是整个对象
A线先持有Object对象的对象锁，B线程就不可以异步方式 调用 Object对象使用synchronized修饰 的方法(因为synchronized用的就是Object对象的对象锁)。
线程B只有等线程A的方法执行完，释放Object对象的对象锁才能执行。

18.线程的同步机制-synchronized同步方法-脏读
Demo05
 synchronized用的是对象锁，同一个对象上加了synchronized的方法。是排队执行的，
 不管多少个线程执行，都要等拿 到锁的线程 把一个方法执行完，下个拿到锁的线程才能执行下一个方法。


19.线程的同步机制-synchronized同步方法-锁重入
synchronized拥有锁重入的功能 ，就是说在使用synchronized时，当一个线程得到一个对象锁后，
再次请求这个对象锁时是可以再次得到该 对象锁。

锁重入性，线程调用 一个加锁的方法，要进入这个锁对象的另一个方法。
*有继承性。

21.线程的同步机制-synchronized同步方法-锁自动释放

当一个线程执行的代码出现了异常，其所有的锁会自动 释放。

22.线程的同步机制-synchronized同步方法-同步不具有继承性

23.线程的同步机制-synchronized同步语句-synchronized方法的缺点
25.线程的同步机制-synchronized同步语句-使用同步代码块解决同步方法的弊端

30.线程的同步机制-synchronized同步语句-静态同步synchronized方法与synchronized(class)代码块
静态方法使用的synchronized锁是class
非静态方法使用的synchronized锁是this


32.线程的同步机制-synchronized同步语句-解决synchronized方法无限等待问题
